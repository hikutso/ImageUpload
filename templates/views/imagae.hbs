<!DOCTYPE html>

<html>

<head>
    <title>Weather</title>
    <script src="https://cdn.jsdelivr.net/npm/p5@1.0.0/lib/p5.min.js"></script>
</head>

<body>

    <div class="button-group">
        <button id="btn-start" type="button" class="button">Start Streaming</button>
        <button id="btn-stop" type="button" class="button">Stop Streaming</button>
        <button id="btn-capture" type="button" class="button">Capture Image</button>
    </div>

    <!-- Video Element & Canvas -->
    <div class="play-area">
        <div class="play-area-sub">
            <h3>The Stream</h3>
            <video id="stream" width="320" height="240"></video>
        </div>
        <div class="play-area-sub">
            <h3>The Capture</h3>
            <canvas id="capture" width="320" height="240"></canvas>
            <div id="snapshot"></div>
        </div>
    </div>

    <script>

        function setup() {

            var data;
            var btnStart = document.getElementById("btn-start");
            var btnStop = document.getElementById("btn-stop");
            var btnCapture = document.getElementById("btn-capture");

            // The stream & capture
            var stream = document.getElementById("stream");
            var capture = document.getElementById("capture");
            var snapshot = document.getElementById("snapshot");

            var cameraStream = null;

            // Attach listeners
            btnStart.addEventListener("click", startStreaming);
            btnStop.addEventListener("click", stopStreaming);

            function startStreaming() {

                var mediaSupport = 'mediaDevices' in navigator;

                if (mediaSupport && null == cameraStream) {

                    navigator.mediaDevices.getUserMedia({ video: true })
                        .then(function (mediaStream) {

                            cameraStream = mediaStream;

                            stream.srcObject = mediaStream;

                            stream.play();
                        })
                        .catch(function (err) {

                            console.log("Unable to access camera: " + err);
                        });
                }
                else {

                    alert('Your browser does not support media devices.');

                    return;
                }
            }

            function stopStreaming() {

                if (null != cameraStream) {

                    var track = cameraStream.getTracks()[0];

                    track.stop();
                    stream.load();

                    cameraStream = null;
                }
            }

            btnCapture.addEventListener("click", captureSnapshot);

            function captureSnapshot() {
                  let lat, lon;


                if (null != cameraStream) {

                    var ctx = capture.getContext('2d');
                    var img = new Image();


                    ctx.drawImage(stream, 0, 0, capture.width, capture.height);

                    img64 = capture.toDataURL(img);
                    img.width = 240;

                    snapshot.innerHTML = '';

                    snapshot.appendChild(img);
                   
                    const data = { lat,lon,img64 };
                    console.log(data)
                   

                    const options = {

                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)


                    };

                    console.log(options)
                    fetch('/api', options)




                }

                if ('geolocation' in navigator) {
                    console.log('geolocation available');
                    navigator.geolocation.getCurrentPosition(position => {
                        lat = position.coords.latitude;
                        lon = position.coords.longitude;
                        console.log(lat, lon);
                        
                    });
                } else {
                    console.log('geolocation not available');
                }
            }


        }



    </script>



</body>

</html>